{"remainingRequest":"D:\\强化学习大作业\\代码\\AVS\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\强化学习大作业\\代码\\AVS\\src\\components\\contents\\EconomySection.vue?vue&type=style&index=0&id=0ebbb2c8&lang=scss&scoped=true","dependencies":[{"path":"D:\\强化学习大作业\\代码\\AVS\\src\\components\\contents\\EconomySection.vue","mtime":1659680525830},{"path":"D:\\强化学习大作业\\代码\\AVS\\node_modules\\@vue\\cli-service\\node_modules\\css-loader\\dist\\cjs.js","mtime":1659358215366},{"path":"D:\\强化学习大作业\\代码\\AVS\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1659358217041},{"path":"D:\\强化学习大作业\\代码\\AVS\\node_modules\\postcss-loader\\src\\index.js","mtime":1659358216422},{"path":"D:\\强化学习大作业\\代码\\AVS\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1659358252476},{"path":"D:\\强化学习大作业\\代码\\AVS\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1659358180332},{"path":"D:\\强化学习大作业\\代码\\AVS\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1659358217041}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQojREwtc2VjdGlvbiB7DQogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgiLi4vLi4vYXNzZXRzL2Vjb25vbXktYmcud2VicCIpOw0KfQ0K"},{"version":3,"sources":["D:\\强化学习大作业\\代码\\AVS\\src\\components\\contents\\EconomySection.vue"],"names":[],"mappings":";AAmVA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD","file":"D:/强化学习大作业/代码/AVS/src/components/contents/EconomySection.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <section id=\"DL-section\" class=\"section is-medium\">\r\n    <h1 class=\"title\">自动驾驶与深度学习</h1>\r\n    <br/>\r\n    <h2 class=\"subtitle\">\r\n    针对自动驾驶的六大主要任务，即场景理解、运动规划、决策、车辆控制、社会行为和通信。</h2>\r\n  </section>\r\n  \r\n  <div id=\"深度场景理解\" >\r\n\r\n  <article class=\"message is-link\">\r\n    <div  class=\"message-body\">\r\n      <b>4.1 场景理解</b>\r\n      <br/>\r\n      <br/>\r\n      在过去二十年中，场景理解领域使用有效的分布式语言技术取得了重大进展。这一进展使得通过使用不同的传感器（如激光雷达、摄像机和雷达）为AVS提供有关驾驶环境的关键和精确信息成为可能。事实上，深度CNN在实时图像分类和检测方面已显示出显著的结果（Fernandes et al., 2021）。如图4所示，场景理解中DL技术的使用为AVS提供了可操作的信息，如车道、交通灯、行人、交叉线、交通标志等的检测。Cordts et al. (2016)。 \r\n      <br/>\r\n      <br/>\r\n      也就是说，感知仍然是车辆识别道路几何形状的主要先决条件之一, 并识别道路用户，如行人、自行车和其他车辆。感知分为两组：道路场景和目标检测。      \r\n    </div>\r\n  </article>\r\n  <div class='pic'>\r\n      <img id=\"场景理解图片\" src='../../assets/目标检测.webp' width=\"900\" height=\"1000\">\r\n      <p>图：场景理解</p>\r\n  </div>\r\n  <article class=\"message is-link\">\r\n    <div id=\"深度道路场景\"  class=\"message-body\">\r\n      <b>4.1.1 道路场景</b>\r\n      <br/>\r\n      <br/>\r\n      准确识别和提取主要道路信息对于AVS识别道路要素（例如路面、沟渠、护栏和栅栏）至关重要。由于DL的强大功能，可以实现高精度的道路要素识别。例如，Balado et al. (2019)使用移动激光扫描（MLS）获得的信息来识别道路环境的主要元素。他们的提议基于点网（Qi et al., 2017）和语义分割（SS）方法来识别道路元素；它为城市地区的AVS提供了良好的前景。\r\n      <br/>\r\n      <br/>\r\n      识别道路的几何结构可以为AVS提供有关其环境的更多信息。Laddha et al.(2016)用基于监督和非监督学习的混合算法，使用CNN识别道路几何形状。虽然该算法减少了人为标记的工作量，并使训练更具可扩展性，但仍需要在具有关键天气条件的不同场景中对其进行评估。\r\n      <br/>\r\n      <br/>\r\n      全面了解周围环境和道路区域（例如遮挡、3D几何形状和道路拓扑类型）有助于自主驾驶的实际应用。\r\n      为此，Yan et al. (2020)开发了一种基于激光雷达数据的多任务道路感知网络（LMRoadNet）方法。LMRoadNet旨在检测和估计道路测量值，如道路的长度和形状，以识别其拓扑结构。\r\n      <br/>\r\n      <br/>\r\n      道路转角被认为是识别具有挑战性的区域之一。Bolte et al. (2019)的一项研究引入了道路转角的形式定义，并在AVS摄像机的视频信号中检测它们。因此，基于CNN的系统使AVS能够在关键情况下感知更好的道路。\r\n      <br/>\r\n      <br/>\r\n      Tümen and Ergen (2020)开发了一种图像处理方法和基于DL的方法，用于使用CNN检测公路上的十字路口、分隔带和人行横道。鉴于这些地方的事故发生率很高，这种检测对于改善道路安全至关重要。\r\n      <br/>\r\n      <br/>\r\n      Di et al. (2017)研究了交通场景理解问题，以从具有照明条件的图像中识别道路物体。他们考虑了基于CNN的密集对应迁移学习方法，以提取城市环境图像的深度表示。然而，这种方法没有考虑到不同和复杂的驾驶场景。\r\n      <br/>\r\n      <br/>\r\n      交通标志的成功检测和分类是全自动驾驶汽车要克服的主要挑战之一。例如，Sajjad et al. (2020)开发了一种检测和避开障碍物的方法。该模型基于视觉传感器识别各种交通标志；它允许使用超声波传感器避开障碍物。作者实现了他们的原型，通过仅使用单目视觉传感器来促进车辆感知。\r\n    </div>\r\n  </article>\r\n  <article class=\"message is-link\">\r\n    <div id=\"深度目标检测\"  class=\"message-body\">\r\n      <b>4.1.2 目标检测</b>\r\n      <br/>\r\n      <br/>\r\n      准确、实时地检测周围物体，包括其他道路使用者，对于AVS来说至关重要。Wang et al. (2020b) 提出了一种基于DL技术的端到端三维目标检测方法。具体来说，他们的技术使用CNN和融合网络（FoFNet）来预测边界框和对象类别，例如汽车、行人和骑自行车的人。\r\n      <br/>\r\n      <br/>\r\n      Prabhakar et al. (2017)提出了一种通过考虑天气条件来提高检测效率的方法。更具体地说，他们使用区域卷积神经网络（R-CNN）来识别和分类障碍物，如车辆、行人和动物。在雨天，他们使用在每个检测到的对象顶部带有类名的边界框。然而，需要对其他道路图像数据集进行更多测试，以评估该模型的准确性和适用性。\r\n      <br/>\r\n      <br/>\r\n      除了目标检测之外，还需要估计其他关键参数（例如距离），以帮助实现自动驾驶。Chen et al. (2018b)提出多任务组合策略（CPMTL）算法，该算法旨在通过在检测过程中估计车辆与其他道路使用者之间的距离来改进检测。\r\n      <br/>\r\n      <br/>\r\n      Li et al. (2021)解决了夜间使用CNN进行检测的问题，以改进微光图像识别。他们报告说，他们的提案可以帮助AVS识别道路，特别是在没有路灯的农村地区。\r\n      <br/>\r\n      <br/>\r\n      Dinh et al. (2020)提出了一种基于CNN的方法，用于更好地检测城市交通中的目标；他们假设AVS配备了两个焦距不同的摄像机。他们表明，他们的提议允许检测小型物体（例如，小型和遥远的车辆）。\r\n      <br/>\r\n      <br/>\r\n      现有的几种方法依赖视频进行目标检测；随着时间的推移，它们在连续的帧中对对象进行分类。然而，这没有考虑导致信息丢失的图像帧之间的空间和时间相关性。为了填补这一空白Liu et al.(2020) 基于运动辅助特征校准网络（MFCN）在两种情况下识别车辆，即遮挡和截断。与Ren et al. (2017), Song et al. (2018b), and Zhang et al. (2017)相比，他们的提案的评估确实表明，在不同的物体外观下，检测精度更好。\r\n      <br/>\r\n      <br/>\r\n      由于来自传感器的数据量巨大，在训练过程中减少数据量可以提高检测模型的性能。基本上，只使用重要数据可以缩短基于DL的方法的训练时间。驾驶期间的时间至关重要，尤其是在紧急情况下；因此，检测必须是实时的（Das et al., 2020）。\r\n      <br/>\r\n      <br/>\r\n      三维物体检测揭示了更准确的物体大小和位置信息，用于自动驾驶。自主驾驶的许多重要方面，如运动规划和车辆控制，通常需要忠实地表示车辆周围的三维空间。现有的3D物体检测贡献在使用传感器进行检测的方式上有着根本的不同。一些研究（Ma et al., 2019; Peng et al., 2020）仅使用单目摄像机。例如，Zhang et al. (2020b)提出了一种新的单目框架，用于自动驾驶场景中的三维检测；目标是使用3D盒检测和定位对象。\r\n      <br/>\r\n      <br/>\r\n      其他几种方法提出了摄像机图像和激光雷达数据的融合。Chen et al. (2017a)试图通过开发基于多视图三维网络（MV3D）的三维物体检测方法来提高检测性能。他们的方案使用激光雷达点云和RGB图像来预测3D边界盒；它优于仅依赖传感器的方法。Hong et al. (2020) 提出了一种3D检测方法，该方法利用激光雷达点云和RGB图像作为交叉融合网络的输入，他们通过模拟表明，他们的提议允许检测通常仅使用传感器难以检测的对象。\r\n      <br/>\r\n      <br/>\r\n      弱势道路使用者的安全仍然是一个具有挑战性的重大问题。因此，行人的检测至关重要，因为他们被视为主要的弱势道路使用者。在此背景下，Zhao et al. (2020)提出了一种称为行人位置感知网络（P-LPN）的方法；它基于内部级联网络（InCNet）。P-LPN将行人分为两组：在车道上移动的行人和在人行道上移动的行人。它使用区域建议网络（RPN）在语义地图上提供每个行人的位置。然而，P-LPN没有考虑行人的意图，这对于AVS理解行人的运动非常重要。\r\n    </div>\r\n  </article>\r\n  <div class='pic'>\r\n      <img id=\"深度学习中的场景理解方法比较\" src='../../assets/深度学习中的场景理解方法比较.png' width=\"900\" height=\"1000\">\r\n      <p>表：深度学习中的场景理解方法</p>\r\n  </div>\r\n  </div>\r\n\r\n\r\n  <article class=\"message is-link\">\r\n    <div id=\"深度运动规划\"  class=\"message-body\">\r\n      <b>4.2 运动规划</b>\r\n      <br/>\r\n      <br/>\r\n    \r\n    </div>\r\n  </article>\r\n  <article class=\"message is-link\">\r\n    <div id=\"深度决策\"  class=\"message-body\">\r\n      <b>4.3 决策</b>\r\n      <br/>\r\n      <br/>\r\n      自动驾驶的决策需要对环境进行准确而充分的描述。以往传统的方法(如启发式和数值优化)未能模拟所有可能的情况。而最近，深度学习技术已经显示出在实时和复杂环境下做出决策的能力。\r\n      <br/>\r\n      <br/>\r\n      Li et al.(2018)利用cnn通过提取道路场景图像来模仿人类驾驶员，从而做出正确的驾驶决策。Gallardo等人(2017)在Krizhevsky et al. (2012)中提出了一种通过cnn，AlexNet架构的环境为自动驾驶汽车做决策的方法。Xie et al. (2019) 提出了一种利用LSTM对自动驾驶汽车与周围车辆之间的相互作用进行建模的变道方法\r\n      <br/>\r\n      <br/>\r\n      自动驾驶汽车的变道机动仍然是一项复杂而富有挑战性的任务。因此，发展能够考虑到周围车辆运动的精确的变道系统是必要的 。Liu et al. (2019b)提出了一种基于dnn的方法，该方法受益于驾驶员的历史经验和V2V信息，以实现准确的变道机动。\r\n      <br/>\r\n      <br/>\r\n      Strickland等人(2018)提出了一种在紧急情况下避免撞车的方法。为了实现这一目标，他们使用贝叶斯卷积LSTM来处理数据并避免现有的碰撞。Wang等人(2020c)使用r - cnn在环形路口引导自动驾驶汽车。他们的方案能够在自动驾驶汽车到达环形路口时做出决定(例如进入或等待)。\r\n    </div>\r\n  </article>\r\n  <div class='pic'>\r\n      <img id=\"深度学习决策算法比较\" src='../../assets/深度学习决策算法比较.png' width=\"900\" height=\"1000\">\r\n      <p>表：深度学习决策算法</p>\r\n  </div>\r\n\r\n  <div id=\"深度车辆控制\"  class=\"message-body\">\r\n  <article class=\"message is-link\">\r\n    <div   class=\"message-body\">\r\n      <b>4.4 车辆控制</b>\r\n      <br/>\r\n      <br/>\r\n      车辆控制负责纠正由运动规划和决策任务产生的错误。控制器在自动驾驶汽车中的作用是稳定和引导车辆沿着路径行驶。它接收由感知和定位模块估计的车辆状态。AVs根据这些状态选择合适的控制命令，如图6所示。\r\n      <br/>\r\n      <br/>\r\n      在本节中，我们首先介绍经典的AV控制策略，这些策略允许最小化成本函数定义了一组状态和控制动作。这些传统控制器可以分为无模型和基于模型两类。\r\n      <br/>\r\n      <br/>\r\n      无模型控制器:这种控制器不使用任何被控制系统的数学模型。它们允许根据设定值和当前状态之间的错误纠正操作。这些控制器很容易实现，因为它们不需要深入了解系统行为。\r\n      <br/>\r\n      <br/>\r\n      然而，它们很难调优，而且不能保证最优性能，只能在有限的操作条件下良好的工作(Samak et al.， 2011)。这种控制器的一个例子是PID，它允许AVs以尽可能小的振动或抖动达到其目标状态。PID的输出依赖于三个超参数，每个超参数对应控制器缩写(P-I-D)。这些超参数特定于每个应用程序 (Kiong et al., 1999; Crenganis and Bologa, 2016)。\r\n      <br/>\r\n      <br/>\r\n      Farag(2020)使用PID控制器控制自动驾驶汽车在路径规划器计算的轨迹上行驶。测试结果表明了PID在不同车速下的性能。 Alonso et al.(2013) 提出了一种基于二次函数最小化的PID控制器参数整定方法。他们的建议被应用于控制自动驾驶车辆跟随另一辆前面的车辆。\r\n      <br/>\r\n      <br/>\r\n      基于模型的控制器:这些控制器使用数学模型来控制被控制系统。运动学控制器决定车辆的运动，忽略作用在系统上的内力或外力。特别是在加速度不显著的低速下，它们是有效的。Satouri等人(2021)使用了一个运动学模型的例子，例如自行车模型(Rajamani, 2011)，它允许控制非线性车辆的运动。该模型估计了汽车的速度和转向角，以及前、后轮胎的转向刚度。他们的方案通过CarSim模拟器进行了测试和验证，结果表明，该模型对运动规划给出的参考路径轨迹具有良好的跟踪性能。\r\n      <br/>\r\n      <br/>\r\n      动态控制器考虑作用在系统上的力和力矩来估计车辆的运动。模型预测控制利用系统的线性或非线性运动模型预测其未来状态，并通过在每个时间步上求解一个优化问题来确定最优控制动作(Samak et al.， 2011)。\r\n      <br/>\r\n      <br/>\r\n      Funke等人(2016)将模型预测和反馈控制器相结合，在保持稳定和避免碰撞的同时，估计到达预期目的地所需的转向角。\r\n      <br/>\r\n      <br/>\r\n      Li等人(2017)提出了一种方法，允许控制自动驾驶车辆跟踪参考路径并避免碰撞(如车辆、骑自行车的人和行人)。他们的建议结合了前馈和反馈控制器(Kapania和Gerdes, 2015)来调整驾驶时的转向角度。Ni等人(2017)也使用前馈和反馈控制器来沿着期望的路径引导AV。他们的模型通过估计轮胎转向刚度来增强控制器的鲁棒性。\r\n      <br/>\r\n      <br/>\r\n      以前的控制器需要深入了解过程和调优。此外，在实施合适的控制器之前，需要知道运动学或动力学模型。这些控制器只能用于特定的场景，而不适合其他情况。当场景发生变化时，它们需要重新调整。此外，他们没有考虑到每个道路使用者的行动，如其他车辆，骑自行车的人和行人。因此，在设计新的自动驾驶汽车相关方法时，考虑一般的vru，特别是行人就变得至关重要。这将有助于更好地理解和预测行人在自动驾驶汽车上路时的意图。\r\n      <br/>\r\n      <br/>\r\n      值得注意的是，这些控制器不处理复杂的情况，如密集的交通，十字路口，人行横道等。它们只专注于控制自动驾驶汽车沿着运动规划产生的参考路径运动。由于这些原因，人工智能技术通过从环境中学习来获得精确的控制命令(例如，转向和调节速度)，从而超越了这些传统技术，就像我们在本小节和人工智能部分介绍的那样。\r\n      <br/>\r\n      <br/>\r\n      控制系统分为两类:(a)纵向控制:调节车辆巡航速度;(b)横向控制:转向车辆车轮进行路径跟踪。\r\n    </div>\r\n  </article>\r\n  <div class='pic'>\r\n      <img id=\"深度学习传统控制算法比较\" src='../../assets/深度学习控制算法比较.png' width=\"900\" height=\"1000\">\r\n      <p>表：深度学习传统控制算法</p>\r\n  </div>\r\n\r\n  <article class=\"message is-link\">\r\n    <div id=\"深度车辆横向控制\"  class=\"message-body\">\r\n      <b>4.4.1 车辆横向控制</b>\r\n      <br/>\r\n      <br/>\r\n      横向控制可以选择所需的转向角度，并纠正驾驶过程中可能累积的任何误差。\r\n      <br/>\r\n      <br/>\r\n      Rausch等人(2017)提出了一种基于cnn的转向角预测方法。他们用自动驾驶汽车摄像头收集的数据来训练他们的方案。这种方法已经在只有双车道道路没有交通的情况下进行了评估。\r\n      <br/>\r\n      <br/>\r\n      Sharma等人(2018)提出了一种在不同轨道(例如，多车道轨道和单车道未知轨道)上引导自动驾驶汽车的方法。他们使用cnn和TORCS (Wymann et al.， 2000)用从传感器收集的数据(即速度、转向角、油门和刹车位置)来训练和测试他们的方案。仿真结果表明，他们的模型能够成功地控制汽车，并在不越过车道标记的情况下完成整个圈速。但是，他们的方法在TORCS模拟器上只能在两条轨迹上进行仿真。\r\n      <br/>\r\n      <br/>\r\n      Lee和Ha(2020年)利用CNNs和LSTM来预测自动驾驶汽车的转向角。cnn用于提取驾驶过程中摄像头图像的特征。将这些特征反馈到LSTM中，进行转向角估计。\r\n      <br/>\r\n      <br/>\r\n      Maqueda等人(2018)解决了在不同白天时段(如白天和夜晚)估计转向角的问题。他们利用He等人(2016)使用的cnn来训练来自事件摄像机的数据(Lichtsteiner等人，2008)。\r\n      <br/>\r\n      <br/>\r\n      Yang等人(2018b)报告称，仅预测转向角度不足以实现车辆控制。因此，他们建议估计包括速度控制的参数。他们使用带有5个卷积层和4个全连接层的cnn从Udacity模拟器(公共驾驶数据集，2017)的数据中提取特征。他们使用的训练数据集包括速度值、转向角度和三个前视摄像头的视频流。将提取的特征输入LSTM，预测舵机的转角和速度指令。\r\n      <br/>\r\n      <br/>\r\n      Chen等人(2019c)提出了使用Bojarski等人(2016)和LSTM中的cnn学习驾驶车辆的辅助任务网络(ATN)方法。他们训练他们的网络架构，根据相机的图像输入来预测转向角度。他们使用Udacity模拟器和Comma.ai dataset来评估他们的提案。\r\n      <br/>\r\n      <br/>\r\n      Mújica-Vargas等人(1062)研究了一种增强的司机混合驾驶方法，以在不同的情况下(例如，变道、红绿灯、交通标志和从一条路转到另一条路)引导自动驾驶汽车。他们的建议结合了cnn和rnn，其中cnn提取了从Udacity模拟器收集的数据的特征。但是，他们没有考虑到障碍物和其他道路使用者。\r\n      <br/>\r\n      <br/>\r\n      Kebria等人(2019)提出了一种基于cnn的架构，以减少训练时间并预测自动驾驶汽车的转向角。他们使用cnn来提取驾驶过程中记录的图像的重要特征。他们得出的结论是，在第一层拥有较大过滤器的cnn架构具有出色的性能。\r\n      <br/>\r\n      <br/>\r\n      Yang等人(2018a)使用TORCS (Wymann等人，2000)和CARLA (Dosovitskiy等人，2017)模拟器进行数据收集，而不是包括不同的条件(如白天和夜晚)。这些数据被输入到cnn来估计自动驾驶汽车的转向角。然而，作者没有考虑其他具有挑战性的场景(例如，十字路口和密集的交通)。\r\n    </div>\r\n  </article>\r\n  <div class='pic'>\r\n      <img id=\"深度学习横向控制算法比较\" src='../../assets/深度学习横向控制算法比较.png' width=\"900\" height=\"1000\">\r\n      <p>表：深度学习横向控制算法</p>\r\n  </div>\r\n\r\n  <article class=\"message is-link\">\r\n    <div id=\"深度车辆纵向控制\"  class=\"message-body\">\r\n      <b>4.4.2 车辆纵向控制</b>\r\n      <br/>\r\n      <br/>\r\n      纵向控制负责自动引导，在驾驶过程中调节自动驾驶汽车的速度，保证安全舒适。由于DL可以根据在真实世界或仿真环境中收集的标记训练数据来估计正确的速度，因此它已成为一种流行的纵向控制方法。\r\n      <br/>\r\n      <br/>\r\n      Mohseni等人(2018)提出了一种模型预测控制(MPC)方法来调节AVs的速度以避开障碍物。他们用从激光雷达传感器收集的数据(包括位置、大小和速度信息)来训练DNN架构。此方案的目标是在障碍物出现的地方自定义速度。\r\n      <br/>\r\n      <br/>\r\n      Szilassy等人(2019)提出了一种利用DNN估计路口AVs速度的控制方法。DNN以AVs的位置和初速度作为输入。然而，他们的建议没有考虑十字路口的其他关键参数(如行人行为)。\r\n      <br/>\r\n      <br/>\r\n       al-sharman等人(2020)提出了一种基于DNN架构的状态估计方法。他们使用真实的车辆来收集数据(车辆状态、动力系统状态和制动值)来模仿人类驾驶员。并且将数据输入DNN进行制动压力预测。\r\n      <br/>\r\n      <br/>\r\n       Yang等人(2018a)使用TORCS (Wymann等人，2000)和CARLA (Dosovitskiy等人，2017)模拟器进行数据收集，而不是包括不同的条件(如白天和夜晚)。这些数据被输入到cnn来估计自动驾驶汽车的转向角。然而，作者没有考虑其他具有挑战性的场景(例如，十字路口和密集的交通)。\r\n    </div>\r\n  </article>\r\n  <div class='pic'>\r\n      <img id=\"深度学习横向纵向算法比较\" src='../../assets/深度学习纵向控制算法比较.png' width=\"900\" height=\"1000\">\r\n      <p>表：深度学习纵向控制算法</p>\r\n  </div>\r\n\r\n  <article class=\"message is-link\">\r\n    <div id=\"深度车辆横向纵向控制\"  class=\"message-body\">\r\n      <b>4.4.3 车辆横纵向同时控制</b>\r\n      <br/>\r\n      <br/>\r\n      前面的章节表明DNN可以训练为车辆的纵向或横向控制。为了改善转向和加速机制，纵向和横向控制可以同时使用。在下面的文章中，我们将简要讨论使用这两个控件的方法。\r\n      <br/>\r\n      <br/>\r\n      Chen等人(2015)提出了一种估计控制指令(转向、加速和制动)的方法。他们用TORCS(2021年)收集的12小时视频数据训练cnn。他们的提议使自动驾驶汽车能够在不同的场景下驾驶。Devineau等人(2018)提出了一种多层感知(MLP)方法，利用cnn训练自动驾驶汽车在具有挑战性的情况下驾驶(包括在长直线和紧密曲线之间切换)。实验结果表明，该方法对舵机转角的估计是有效的。\r\n      <br/>\r\n      <br/>\r\n      Sharma等人(2019年)使用TORCS(2021年)收集数据(包括按速度、转向角、油门和刹车位置标记的道路图像)。这些数据被提供给cnn，训练模型同时学习预测车辆速度和转向角度。\r\n      <br/>\r\n      <br/>\r\n       Xing等人(2020)开发了一种在高速公路上变道的方法。虽然该方案在训练阶段同时使用了CNNs和rnn，但尚未在车流量密集的关键情况下进行测试。\r\n    </div>\r\n  </article>\r\n  <div class='pic'>\r\n      <img id=\"深度学习车辆控制算法总结\" src='../../assets/深度学习车辆控制算法对比.png' width=\"900\" height=\"1000\">\r\n      <p>表：深度学习车辆控制算法总结</p>\r\n  </div>\r\n  </div>\r\n\r\n\r\n  <article class=\"message is-link\">\r\n    <div id=\"深度学习车辆社会行为\"  class=\"message-body\">\r\n      <b>4.5 社会行为</b>\r\n      <br/>\r\n      <br/>\r\n      汽车行业的目标是在未来几年推出五级(全自动化)自动驾驶汽车。在未来的交通系统中获得完全的自动驾驶汽车，这都将取决于自动驾驶汽车如何识别路人的行为。DL技术在理解路人的意图，从而做出及时的交通决策方面显示出良好的结果。\r\n      <br/>\r\n      <br/>\r\n      许多技术都被广泛用于理解行人在道路上的行为，无论是通过理解行人的运动还是分析行人的行为和意图。\r\n      <br/>\r\n      <br/>\r\n      Hoermann等人(2018)将贝叶斯滤波技术和cnn结合起来，与道路用户(包括行人、自行车和车辆)训练数据。他们的建议的目的是估计每个道路使用者的意图。\r\n      <br/>\r\n      <br/>\r\n      Saleh等人(2020)提出了在交通环境中理解行人意图的问题。他们仅基于来自摄像机的视频，使用黄等人(2017)的DenseNets实时检测和跟踪行人。该方法在意图预测方面取得了良好的结果。\r\n      <br/>\r\n      <br/>\r\n      Abughalieh和Alawneh(2020)提出了一种基于cnn和收集的图像预测行人意图的方法。他们的提案允许在人行横道上识别行人的方向和与自动驾驶汽车的距离。然而，他们没有实时考虑行人的姿势。\r\n      <br/>\r\n      <br/>\r\n      Morales Alvarez et al. (2020) 利用自动驾驶汽车中传感器获取的数据来识别行人的位置(例如姿势和位置)。他们利用这些信息，根据rnn估计行人过马路的意图。结果显示，75%的测试在意图预测方面是成功的。\r\n      <br/>\r\n      <br/>\r\n      Muscholl等人(2020)使用贝叶斯网络来理解行人过马路时的行为。结果表明，他们的建议比其他现有方法更好地估计行人位置(Gupta等人，2018年;黄等人，2019a;Mohamed等人，2020年)。\r\n      <br/>\r\n      <br/>\r\n      Poibrenski等人(2020年)使用rnn估计道路上每个行人的所有可能位置。对网络进行训练，根据车辆摄像头收集的图像预测行人的位置。\r\n      <br/>\r\n      <br/>\r\n      Elallid等人(2022)提出了一个使用P-LPN技术检测和统计避难岛上行人的模型。随着时间的推移，数字编号会被更新，并使用LSTM预测AVs的决策。这取决于等待过马路的行人数量。如果车辆数量较多，自动驾驶汽车需要刹车以给行人通过的机会，否则自动驾驶汽车会加速。\r\n    </div>\r\n  </article>\r\n  <div class='pic'>\r\n      <img id=\"深度学习车辆社会行为算法比较\" src='../../assets/深度学习车辆社会行为算法比较.png' width=\"900\" height=\"1000\">\r\n      <p>表：深度学习车辆社会行为算法</p>\r\n  </div>\r\n\r\n  <article class=\"message is-link\">\r\n    <div id=\"深度学习车辆通信\"  class=\"message-body\">\r\n      <b>4.6 通信</b>\r\n      <br/>\r\n      <br/>\r\n      通信技术对提高自动驾驶车辆的感知能力和规划能力以及实现更好的车辆控制有着有效的影响。在某些情况下，传感器不能提供准确的信息。在这些情况下，通信可以用来在车辆之间共享信息。\r\n      <br/>\r\n      <br/>\r\n      信道状态信息是无线通信中的一个术语，用来描述通信链路的信道参数。这个信息代表了散射、衰落和功率随距离衰减的累积效应，描述了信号如何从发射机传播到接收机。\r\n      <br/>\r\n      <br/>\r\n      Du et al.(2017)提出了一种解决大面积资源分配问题的LSTM方法。他们收集了24小时的数据并进行了标记。根据历史交通数据，他们的建议可以检查一段时间内的交通量。\r\n      <br/>\r\n      <br/>\r\n      Li等人(2019b)提出通过共享车辆和基础设施之间的实时数据来提高V2I通信的可靠性。他们使用DNN来加速处理如此大量的数据。测试结果表明，该方法在密集流量下具有良好的性能。\r\n      <br/>\r\n      <br/>\r\n      Gao等人(2019)提出了一种解决V2X通信功率分配问题的方法。利用DNN实时提供资源分配解决方案。Chen等人(2019b)利用cnn来训练来自V2I和V2V通信的数据，解决了同样的问题。他们得出的结论是，与DNN架构相比，cnn降低了网络的权重，从而加快了训练过程。\r\n      <br/>\r\n      <br/>\r\n      Liu等人(2019a)使用LSTM训练数据(包括历史CSI)，以预测未来CSI，用于管理资源分配。他们将数据归一化，以加速网络权值的优化，并迅速找到最优解。在通道预测方面，该结果优于Xu等人(2019)的方法。\r\n      <br/>\r\n      <br/>\r\n      Zhang等人(2020d)使用DNN处理GPS数据，即每辆车的时间戳、纬度和经度信息。这些数据被提供给DNN来预测CSI。\r\n    </div>\r\n  </article>\r\n  <div class='pic'>\r\n      <img id=\"深度学习车辆通信算法比较\" src='../../assets/深度学习车辆通信算法比较.png' width=\"900\" height=\"1000\">\r\n      <p>表：深度学习车辆通信算法</p>\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#DL-section {\r\n  background-image: url(\"../../assets/economy-bg.webp\");\r\n}\r\n</style>"]}]}